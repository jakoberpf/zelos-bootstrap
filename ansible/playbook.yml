- name: Node Configuration
  hosts: all
  serial: 1
  vars:
    ansible_port: 2222
    ansible_ssh_private_key_file: "../.ssh/automation"
  become: true
  tasks:
    - name: Allow tpc connections on relevant ports
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_ports:
          - 22 # teleport (master, worker)
          - 2222 # ssh (master, worker)
          - 53 # local dns cache (master, worker)
          - 80 # http  (master, worker)
          - 179 # calico (master, worker)
          - 443 # https (master, worker)
          - 2378 # etcd (master)
          - 2380 # etcd (master)
          - 4240 # cilium health checks (master, worker)
          - 6443 # kubernetes api server (master)
          - 8883 # netmaker
          - 1888 # netmaker
          - 10250 # kubelet (master, worker)
        jump: ACCEPT
        flush: true
    - name: Allow udp connections on relevant ports
      ansible.builtin.iptables:
        chain: INPUT
        protocol: udp
        destination_ports:
          - 53 # local dns cache (master, worker)
          - 8472 # VXLAN overlay (master, worker)
        jump: ACCEPT
        flush: yes
    - name: "[DEBUG] Save empty ruleset to disk so it will be reloaded on reboot"
      ansible.builtin.command: netfilter-persistent save
    - name: Upgrade all apt packages
      ansible.builtin.apt: upgrade=dist force_apt_get=yes
    - name: Check if a reboot is needed for Debian and Ubuntu boxes
      register: reboot_required_file
      ansible.builtin.stat: path=/var/run/reboot-required get_md5=no
    # - name: Reboot the Debian or Ubuntu server
    #   reboot:
    #     msg: "Reboot initiated by Ansible due to kernel updates"
    #     connect_timeout: 5
    #     reboot_timeout: 600
    #     pre_reboot_delay: 0
    #     post_reboot_delay: 30
    #     test_command: uptime
    #   when: reboot_required_file.stat.exists
