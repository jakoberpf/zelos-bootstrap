- name: caddy-install
  hosts: all
  vars:
    ansible_port: 2222
    ansible_ssh_private_key_file: "../.ssh/automation"
  become: true
  tasks:
    - name: Install HAProxy
      apt:
        name: haproxy
        state: present
    - name: Configure HAProxy
      template:
        src: templates/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: 0644
    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted
    # - name: Allow tpc connections on relevant ports
    #   ansible.builtin.iptables:
    #     chain: INPUT
    #     protocol: tcp
    #     destination_ports:
    #       - 22 # teleport (master, worker)
    #       - 53 # local dns cache (master, worker)
    #       - 80 # http  (master, worker)
    #       - 179 # calico (master, worker)
    #       - 443 # https (master, worker)
    #       - 2378 # etcd (master)
    #       - 2380 # etcd (master)
    #       - 4240 # cilium health checks (master, worker)
    #       - 6443 # kubernetes api server (master)
    #       - 10250 # kubelet (master, worker)
    #     jump: ACCEPT
    #     flush: yes
    # - name: Allow udp connections on relevant ports
    #   ansible.builtin.iptables:
    #     chain: INPUT
    #     protocol: udp
    #     destination_ports:
    #       - 53 # local dns cache (master, worker)
    #       - 8472 # VXLAN overlay (master, worker)
    #     jump: ACCEPT
    #     flush: yes
    - name: "[DEBUG] Flush (remove all) iptables rules"
      command: iptables -F
    - name: "[DEBUG] Enable port forwarding"
      command: sysctl net.ipv4.ip_forward=1
    - name: "[DEBUG] Set INPUT 8883"
      command: iptables -A INPUT -i eth0 -p tcp --dport 8883 -j ACCEPT
    - name: "[DEBUG] Set INPUT 30083"
      command: iptables -A INPUT -i eth0 -p tcp --dport 30083 -j ACCEPT
    - name: "[DEBUG] Set PREROUTING"
      command: iptables -A PREROUTING -t nat -p tcp --dport 8883 -j REDIRECT --to-port 30083
    - name: "[DEBUG] Save empty ruleset to disk so it will be reloaded on reboot"
      command: netfilter-persistent save
    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes
    - name: Check if a reboot is needed for Debian and Ubuntu boxes
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no
    # - name: Reboot the Debian or Ubuntu server
    #   reboot:
    #     msg: "Reboot initiated by Ansible due to kernel updates"
    #     connect_timeout: 5
    #     reboot_timeout: 300
    #     pre_reboot_delay: 0
    #     post_reboot_delay: 30
    #     test_command: uptime
    #   when: reboot_required_file.stat.exists
