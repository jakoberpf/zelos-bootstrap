name: 'Deploy'

on:
  push:
    branches:
      - main

env:
  tf_version: '1.1.8'
  tg_version: '0.36.3'
  tf_working_dir: './terraform'

jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    concurrency: terragrunt
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1

      - name: 'Install sops'
        run: |
          curl -O -L -C - https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux
          sudo mv sops-v3.7.3.linux /usr/bin/sops
          sudo chmod +x /usr/bin/sops

      - name: 'Install age'
        run: |
          curl -O -L -C - https://github.com/FiloSottile/age/releases/download/v1.0.0/age-v1.0.0-linux-amd64.tar.gz
          tar -zxvf age-v1.0.0-linux-amd64.tar.gz
          sudo mv age/age /usr/bin/age
          sudo chmod +x /usr/bin/age

      - name: 'Decrypt secrets'
        run: |
          ./bin/secrets-decrypt.sh
          ./bin/secrets-setup.sh
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

      - name: 'Setup Tooling'
        run: |
          ./bin/tooling.sh

      - name: 'Setup Terragrunt'
        uses: autero1/action-terragrunt@v1.2.0
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Get Cached Terraform Generated Files
        uses: actions/cache@v3
        env:
          cache-name: cache-terraform-generated
        with:
          path: bin/generated
          key: ${{ runner.os }}-${{ env.cache-name }}

      - name: 'Terragrunt Init'
        run: |
          make terraform.init
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terragrunt Validate'
        run: |
          make terraform.validate
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terragrunt Plan'
        run: |
         make terraform.plan
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terragrunt Apply (with force)'
        run: |
          make terraform.apply.force
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terragrunt Post'
        run: |
          make terraform.post
        env:
          OCI_CLI_RC_FILE:  .oci/config

      - name: Cache Terraform Generated Files
        uses: actions/cache@v3
        env:
          cache-name: cache-terraform-generated
        with:
          path: bin/generated
          key: ${{ runner.os }}-${{ env.cache-name }}

  kubespray:
    name: 'Kubespray'
    runs-on: ubuntu-latest
    concurrency: kubespray
    needs: terragrunt
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1

      # - name: 'Kubespray Deploy'
      #   run: |
      #    make terraform.plan

      # - name: 'Kubespray Post'
      #   run: |
      #    make terraform.plan

# TODO trigger zelos-installer action: https://blog.marcnuri.com/triggering-github-actions-across-different-repositories